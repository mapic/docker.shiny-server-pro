daemon off;
user www-data;
worker_processes 4;
pid /run/nginx.pid;

events {
    worker_connections 768;
}

http {

    sendfile                    on;
    tcp_nopush                  on;
    tcp_nodelay                 on;
    keepalive_timeout           65;
    types_hash_max_size         2048;
    include                     /etc/nginx/mime.types;
    default_type                application/octet-stream;
    gzip                        on;
    gzip_disable                "msie6";
    proxy_set_header            X-Real-IP $remote_addr;
    proxy_set_header            X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header            Host $http_host;
    proxy_set_header            X-NginX-Proxy true;
    proxy_redirect              off;
    proxy_ssl_session_reuse     off;
    add_header                  Access-Control-Allow-Origin *;

    # upstream engine {
    #     ip_hash;
    #     server mapic_engine:3001;
    # }

    # upstream mile {
    #     server mapic_mile:3003;
    # }


    # 8080->443 redirect
    server {
        listen 80;
        server_name localhost;
        return 301 https://$server_name$request_uri;
    }

    # portal and tileserver
    server {

        listen                      443 ssl;
        server_name                 localhost;
        client_max_body_size        2000m;
        add_header                  Strict-Transport-Security "max-age=63072000; includeSubdomains;";
        add_header                  Access-Control-Allow-Origin *;
        ssl_session_cache           shared:SSL:1m;
        ssl_session_timeout         10m;
        ssl                         on;
        ssl_certificate             /mapic/fullchain.pem;
        ssl_certificate_key         /mapic/privkey.key;
        ssl_verify_client           off;
        ssl_protocols               TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers                 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
        ssl_prefer_server_ciphers   on;
        ssl_dhparam                 /mapic/dhparams.pem;


        # from https://www.r-bloggers.com/shiny-server-series-part-4-adding-user-authentication-using-auth0/
        # ssl_stapling on;
        # ssl_stapling_verify on;
        # add_header Strict-Transport-Security max-age=15768000;

        # For certbot to create SSL certificates
        location ~ /.well-known {
            allow all;
        }

         # Open shiny server
        location /apps/ {
            proxy_pass http://127.0.0.1:3838/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Rstudio server
        location /editor/ {
            proxy_pass http://127.0.0.1:8787/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # auth0 server
        location /private-apps/ {
            proxy_set_header    Host $host;

            # This points to our shiny-auth0 authentication proxy,
            # change localhost:3000 to suit the configuration of
            # your shiny-auth0 config
            proxy_pass          http://localhost:3000;
            proxy_redirect      http://localhost:3000/ $scheme://$host/;

            proxy_http_version  1.1;
            # The following lines enable WebSockets proxying, do not remove them
            # as they are used by Shiny Server to improve user experience
            #proxy_set_header Upgrade $http_upgrade;
            #proxy_set_header Connection $connection_upgrade;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
       }

        # old -> 

        # # app server [engine]
        # location / {
        #     access_log              /dev/stdout;
        #     error_log               /dev/stdout info;
        #     proxy_set_header        Upgrade $http_upgrade;
        #     proxy_set_header        Connection "upgrade";
        #     proxy_http_version      1.1;
        #     proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header        Host $host;
        #     proxy_pass              http://engine;
        # }

      

    }

}